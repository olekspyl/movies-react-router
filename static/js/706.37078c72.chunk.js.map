{"version":3,"file":"static/js/706.37078c72.chunk.js","mappings":"qOA0BA,EAxBsB,SAAC,GAAa,IAAZA,EAAW,EAAXA,MAIdC,EAAiB,SAACC,GACpB,GAAKA,EAGL,MAAM,kDAAN,OAAyDA,EAC5D,EAYD,OAV4BF,EAAMG,KAAI,SAAAC,GAClC,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAChC,OAAO,UAAC,KAAD,YACC,gBAAKC,IAAKR,EAAeK,GAAeI,IAAKH,KAC7C,SAAC,KAAD,UAAWA,KACX,+BAAOC,OAHOH,EAMzB,GAGJ,ECMD,EAxBa,WACT,OAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOX,EAAP,KAAcY,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IAPJE,EAAAA,EAAAA,YAAU,WACFC,EAAAA,EAAAA,IAAA,6CAAgDH,EAAhD,sDAA4GI,MACxG,SAAAC,GAAQ,OAAIN,EAASM,EAASC,KAAKf,KAA3B,IACdgB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEhB,GAAE,CAACR,IAEKb,EAKL,OAFAsB,QAAQC,IAAIvB,IAGR,SAAC,KAAD,WACI,SAAC,EAAD,CAAeA,MAAOA,KAGjC,C","sources":["components/CastComponent/CastComponent.js","pages/Cast.js"],"sourcesContent":["import { CastItem, CastName } from \"components/App.styled\";\n\nconst CastComponent = ({casts}) => {\n\n\n\n    const getCastFaceURL = (profilePath) => {\n        if (!profilePath) {\n        return;\n    }\n        return `https://www.themoviedb.org/t/p/w66_and_h66_face${profilePath}`\n    }\n  \n    const unpackedCasts = () => casts.map(cast => {\n        const { id, profile_path, name, character } = cast;\n        return <CastItem key={id}>\n                <img src={getCastFaceURL(profile_path)} alt={name} />\n                <CastName>{name}</CastName>\n                <p>as {character}</p>\n            </CastItem>\n    \n    });\n\n    return unpackedCasts();\n}\n\nexport default CastComponent;\n","import axios from \"axios\";\nimport {useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CastComponent from \"components/CastComponent\";\nimport { CastList} from \"components/App.styled\";\n\nconst Cast = () => {\n    const [casts, setCasts] = useState(null);\n    const { movieId } = useParams();\n\n\nuseEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=542013762b3531b404b15130444dfd0b`).then(\n            response => setCasts(response.data.cast)\n    ).catch(error => console.log(error));\n    \n}, [movieId]);  \n \n    if (!casts) {\n        return;\n    }\n    console.log(casts)\n    \n    return (\n        <CastList>\n            <CastComponent casts={casts} />\n        </CastList>\n    );\n};\n\nexport default Cast;"],"names":["casts","getCastFaceURL","profilePath","map","cast","id","profile_path","name","character","src","alt","useState","setCasts","movieId","useParams","useEffect","axios","then","response","data","catch","error","console","log"],"sourceRoot":""}