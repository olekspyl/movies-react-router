{"version":3,"file":"static/js/245.0a801a1d.chunk.js","mappings":"uOAoCA,EAhCuB,SAAC,GAAa,IAEXA,EAFDC,EAAW,EAAXA,MACTC,EAAwED,EAAxEC,YAAaC,EAA2DF,EAA3DE,MAAOC,EAAoDH,EAApDG,aAAcC,EAAsCJ,EAAtCI,aAAcC,EAAwBL,EAAxBK,SAAUC,EAAcN,EAAdM,OAAQC,EAAMP,EAANO,GAMxEC,EAAYF,EAAOG,KAAI,SAAAC,GAAK,OAAI,SAAC,KAAD,UAA4BA,EAAMC,MAAjBD,EAAMH,GAA3B,IAC5BK,EAAO,IAAIC,KAAKV,GAEtB,OACI,+BACQ,UAAC,KAAD,YACA,0BACI,SAAC,KAAD,CAAaW,QAAQ,OAAOC,KAZtBhB,EAYwCE,EAXpD,sDAAN,OAA6DF,IAWWiB,IAAKd,OAErE,4BACI,UAAC,KAAD,WAAQA,EAAR,IAAgBU,EAAKK,kBACrB,UAAC,KAAD,yBAAmBC,OAAOC,SAAwB,IAAff,EAAqB,IAAxD,QACA,SAAC,KAAD,wBACA,SAAC,KAAD,UAAWC,KACX,SAAC,KAAD,sBACA,SAAC,KAAD,UAAaG,KACb,SAAC,KAAD,sCACA,SAAC,KAAD,CAAUY,GAAE,kBAAab,EAAb,SAAZ,mBACA,SAAC,KAAD,CAAaa,GAAE,kBAAab,EAAb,YAAf,4BAKnB,E,iBCjCYc,E,OAASC,GAAAA,OAAH,gICUnB,EAR4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,SAACF,EAAD,CAAQG,KAAK,SAASC,UAAU,uBAAhC,UACE,SAAC,KAAD,CAAML,GAAIG,EAAV,mBAGL,ECyBD,EA5BqB,WAAO,IAAD,IACzB,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFL,GAAWO,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,QAAM,oBAACT,EAASU,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAW5C,IATAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CR,EAF1C,8CAIGS,MAAK,SAAAC,GAAQ,OAAIX,EAASW,EAASC,KAAtB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACb,IAEC5B,EAIL,OACE,iCACE,SAAC,EAAD,CAAqBuB,SAAUQ,EAAKa,WACpC,SAAC,EAAD,CAAgB5C,MAAOA,KACvB,SAAC,KAAD,MAGL,C","sources":["components/MovieComponent/MovieComponent.js","components/ButtonBackComponent/Button.styled.js","components/ButtonBackComponent/ButtonBackComponent.js","pages/MovieDetails.js"],"sourcesContent":["import {MovieContainer, MoviePoster, Score, Title, OverviewTitle, Overview, GenresTitle,\n    GenresList, AdditionalInfo, GenresItem, CastLink, ReviewsLink} from \"components/App.styled\";\n    \n\nconst MovieComponent = ({movie}) => {\n        const { poster_path, title, release_date, vote_average, overview, genres, id} = movie;\n    const getPosterURL = (posterPath) => {\n        return `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${posterPath}`\n    };\n\n\n    const allGenres = genres.map(genre => <GenresItem key={genre.id}>{genre.name}</GenresItem>);\n    const date = new Date(release_date);\n\n    return (\n        <>\n                <MovieContainer>\n                <div>\n                    <MoviePoster loading=\"lazy\" src={getPosterURL(poster_path)} alt={title} />\n                </div>\n                <div>\n                    <Title>{title} {date.getFullYear()}</Title>\n                    <Score>User score {Number.parseInt(vote_average * 100 / 10)}%</Score>\n                    <OverviewTitle>Overview</OverviewTitle>\n                    <Overview>{overview}</Overview>\n                    <GenresTitle>Genres</GenresTitle>\n                    <GenresList>{allGenres}</GenresList>\n                    <AdditionalInfo>Additional information</AdditionalInfo>\n                    <CastLink to={`/movies/${id}/cast`}>Cast</CastLink>\n                    <ReviewsLink to={`/movies/${id}/reviews`}>Reviews</ReviewsLink>\n                </div>\n            </MovieContainer>\n        </>\n    )\n};\n\nexport default MovieComponent;","import styled from 'styled-components';\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-left: 20px;\n\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Button } from './Button.styled';\n\nconst ButtonBackComponent = ({ location }) => {\n  return (\n    <Button type=\"button\" className=\"btn btn-outline-dark\">\n      <Link to={location}>Back</Link>\n    </Button>\n  );\n};\n\nexport default ButtonBackComponent;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport MovieComponent from 'components/MovieComponent';\nimport ButtonBackComponent from 'components/ButtonBackComponent';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const back = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=022b72fb5c3086143a7c2d5ac5a186e1`\n      )\n      .then(response => setMovie(response.data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <ButtonBackComponent location={back.current} />\n      <MovieComponent movie={movie} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["posterPath","movie","poster_path","title","release_date","vote_average","overview","genres","id","allGenres","map","genre","name","date","Date","loading","src","alt","getFullYear","Number","parseInt","to","Button","styled","location","type","className","useState","setMovie","movieId","useParams","useLocation","back","useRef","state","from","useEffect","axios","then","response","data","catch","error","console","log","current"],"sourceRoot":""}